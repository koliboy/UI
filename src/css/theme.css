@import url('https://fonts.googleapis.com/css2?family=Outfit&family=Roboto&family=Roboto+Flex:opsz@8..144&display=swap');

* {
    font-family: 'Roboto Flex', sans-serif;
}

::selection {
    background-color: var(--selection-color);
    color: var(--color);
}

a {
    text-decoration: none;
    color: var(--color-primary);
}

a.a-icon::after {
    content: '\031A';
    /* Unicode arrow right character */
    margin-left: -2px;
    font-weight: bold;
    background: red;
}

.h1 {
    font-size: calc(var(--font-size) + calc(var(--font-size) * 0.60));
}

.h2 {
    font-size: calc(var(--font-size) + calc(var(--font-size) * 0.50));
}

.h3 {
    font-size: calc(var(--font-size) + calc(var(--font-size) * 0.40));
}

.h4 {
    font-size: calc(var(--font-size) + calc(var(--font-size) * 0.30));
}

.h5 {
    font-size: calc(var(--font-size) + calc(var(--font-size) * 0.20));
}

.h6 {
    font-size: calc(var(--font-size) + calc(var(--font-size) * 0.10));
}

.h7 {
    font-size: calc(var(--font-size) + calc(var(--font-size) * 0.07));
}

.h8 {
    font-size: calc(var(--font-size) + calc(var(--font-size) * 0.05));
}

.h9 {
    font-size: calc(var(--font-size) - calc(var(--font-size) * 0.05));
}

.h10 {
    font-size: calc(var(--font-size) - calc(var(--font-size) * 0.10));
}

.h11 {
    font-size: calc(var(--font-size) - calc(var(--font-size) * 0.20));
}

.h12 {
    font-size: calc(var(--font-size) - calc(var(--font-size) * 0.30));
}



.color {
    color: var(--color);
}

.bg {
    background: var(--background-color);
}

.color-blur {
    color: #999999;

}

.flex {
    display: flex;
}

.flex-col {
    flex-direction: column;
}

.flex-gap {
    gap: var(--padding)
}

.img {
    height: 100%;
    width: 100%;
    background-size: contain;
    background-repeat: no-repeat;

}

/* var(--border-style) var(--border-width) var(--border-color)*/
.divider {
    display: flex;
    margin-top: var(--padding);
    margin-bottom: var(--padding);
    background: var(--border-color);
    height: var(--border-width);
    opacity: 0.50;
}

.disableScroll.Scrollon {
    /*when dropdown or.. dogle opend*/
    overflow-x: hidden;
}

.padding {
    padding: var(--padding) 10px var(--padding) 10px;
}

.padding-cnt {
    padding: var(--padding) var(--padding-cnt) var(--padding) var(--padding-cnt);
}

.gap-t-b {
    margin-top: var(--padding);
    margin-bottom: var(--padding);
}

.border {
    border: var(--border-width) var(--border-style) var(--border-color);

}

.border-radius {
    border-radius: var(--border-radius);

}

.center {
    justify-items: center;
    justify-content: center;

}

.user-select {
    user-select: none;
}

.t-center {
    text-align: center;
}

.t-end {
    text-align: end;
}

.center-tb {
    align-content: center;
    align-items: center;
}

.over-x-adjust {
    overflow-x: hidden;
    white-space: normal;
    word-break: break-all;
}

.over-x-dot {
    overflow-x: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.icon {
    height: calc(var(--font-size) + 5px);
    width: calc(var(--font-size) + 5px);
    min-height: calc(var(--font-size) + 5px);
    min-width: calc(var(--font-size) + 5px);
    border-radius: 50%;
    fill: var(--fill);
}

.icon img {
    height: 100%;
    width: 100%;
    border-radius: 50%;
    background-size: contain;
    background-repeat: no-repeat;
}

.icon-actn {
    /*icon like button*/
    height: calc(var(--font-size) + calc(var(--font-size) * 0.70));
    width: calc(var(--font-size) + calc(var(--font-size) * 0.70));
    border-radius: 50%;
    display: flex;
    fill: var(--fill);
    justify-content: center;
    align-content: center;
    align-items: center;
}

.icon-actn svg {
    height: calc(var(--font-size) + calc(var(--font-size) * 0.20));
    width: calc(var(--font-size) + calc(var(--font-size) * 0.20));
    min-height: calc(var(--font-size) + calc(var(--font-size) * 0.20));
    min-width: calc(var(--font-size) + calc(var(--font-size) * 0.20));


}

.flex-l-c-r {
    /*left ro right icon with text center*/
    display: flex;
    height: auto;

}

.flex-l-c-r .center {
    flex: auto;
    margin-left: var(--padding);
    margin-right: var(--padding);

}

.error {
    color: var(--error-color);
    fill: var(--error-color);
}


.spinner {
    animation: spinner 2s linear infinite;
}

@media screen and (min-width: 768px) {
    .ul-hover:hover {
        background: var(--ul-hover);
    }

    .pointer {
        cursor: pointer;
    }
}

@media screen and (max-width: 768px) {

    /*mobile*/
    .ul-hover:active {
        background: var(--ul-hover);
    }
}
